- raw: dnf install -y python2 python2-dnf libselinux-python

- selinux: state=disabled

- timezone: name=Asia/Tokyo

- dnf: name="{{ item }}" state=latest
  with_items:
    - git
    - zsh
    - emacs-nox
    - tmux
    - zlib-devel
    - ncurses-devel
    - openssl-devel
    - readline-devel
    - libxml2-devel
    - gnutls-devel

- hostname: name={{ HOSTNAME }}

- name: make sure 'wheel' group
  group: name=wheel state=present

- name: allow 'wheel' group to have sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
 
# With ansible_local provisioning, ansible is executed at guest as user `vagrant`;
#
# Don't know why `become_user: root` works but `become_user: <normal user>` gives an error:
#
#     sudo: a password is required
#
# Even user `vagrant` can sudo without password because there is a sudo file generated by vagrant:
#
#     /etc/sudoers.d/vagrant-nopasswd
#
# I guess this is a bug of `ansible_local` plugin which only reads `/etc/sudoers` but not files under `/etc/sudoers.d`.
#
# As a workaround, add user "vagrant" to "wheel" group which can sudo without password.
- user: name=vagrant groups=wheel append=yes

- group: name={{ item.name }} state=present
  with_items: "{{ users }}"

- user: name={{ item.name }} group={{ item.name }} groups={{ item.groups }} shell=/bin/zsh password={{ item.password }}
  with_items: "{{ users }}"

- file: path=/home/{{ item.name }}/.ssh owner={{ item.name }} group={{ item.name }} state=directory mode='0700'
  with_items: "{{ users }}"

- name: deploy public key
  copy:
    src: "{{ item.public_key }}"
    dest: "/home/{{ item.name }}/.ssh/id_rsa.pub"
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: "0644"
  with_items: "{{ users }}"

- name: deploy private key
  copy:
    src: "{{ item.private_key }}"
    dest: "/home/{{ item.name }}/.ssh/id_rsa"
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: "0600"
  with_items: "{{ users }}"

- authorized_key: user={{ item.name }} state=present key={{ lookup('file', item.public_key) }}
  with_items: "{{ users }}"